<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                                    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd  
                                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
                                    http://www.springframework.org/schema/oxm  
                                    http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd  
                                    http://www.springframework.org/schema/util  
                                     http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	
	
	<!-- Enables automatic mapping of fund objects to and from JSON -->
	<mvc:annotation-driven />
	
	
	<!-- Setup spring to pull in @Controller, @RequestMapping, etc Configuration 
		scans specified packages for classes configured as Spring managed beans and 
		automatically sets up objects annotated with @Controller, @Service etc. -->
	<context:component-scan base-package="com.justmeet" />
	
	<bean
			class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
			<property name="supportedMediaTypes">
				<list>
					<value>image/jpeg</value>
					<value>image/png</value>
				</list>
			</property>
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html"></entry>
				<entry key="json" value="application/json"></entry>
				<entry key="xml" value="application/xml"></entry>
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView"></property>
					<property name="prefix" value="/WEB-INF/jsp/"></property>
					<property name="suffix" value=".jsp"></property>
				</bean>
			</list>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/theiyers_whatsThePlan" />
		<!-- <property name="username" value="theiyers_admin" />
		<property name="password" value="PraxIyer05" /> -->
		<property name="username" value="root" />
		<property name="password" value="password" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

    <bean id="gcmService" class="com.justmeet.service.GcmService" />
    <bean id="userService" class="com.justmeet.service.UserService" />
    <bean id="groupService" class="com.justmeet.service.GroupService" />
    <bean id="planService" class="com.justmeet.service.PlanService" />
    
    <bean id="gcmDao" class="com.justmeet.dao.GcmDAO" />
	<bean id="userDao" class="com.justmeet.dao.UserDAO" />
	<bean id="groupDao" class="com.justmeet.dao.GroupDAO" />
	<bean id="planDao" class="com.justmeet.dao.PlanDAO" />

	<!-- Thread pool definition for tasks to be executed asynchronously. -->
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="queueCapacity" value="100" />
		<property name="waitForTasksToCompleteOnShutdown" value="true" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="10000000" />
	</bean>

</beans>  